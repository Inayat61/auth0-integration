name: 'Terraform'

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.1.7"

# Try to download the state file, but don't fail the job if it's missing (for the first run)
    - name: Download Terraform State (if available)
      id: download_state
      run: |
        if [ $(gh api -X GET repos/${{ github.repository }}/actions/artifacts --jq '.artifacts | length') -gt 0 ]; then
          gh run download-artifact terraform-state --dir terraform/
        else
          echo "No artifact available for the terraform-state yet."
        fi


    - name: Terraform Init
      run: |
        cd terraform
        terraform init -reconfigure

    - name: Terraform Plan
      env:
        TF_VAR_auth0_domain: ${{ secrets.AUTH0_DOMAIN }} 
        TF_VAR_auth0_client_id: ${{ secrets.AUTH0_CLIENT_ID }} 
        TF_VAR_auth0_client_secret: ${{ secrets.AUTH0_CLIENT_SECRET }}
      run: |
        cd terraform
        terraform plan -input=false

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      env:
        TF_VAR_auth0_domain: ${{ secrets.AUTH0_DOMAIN }} 
        TF_VAR_auth0_client_id: ${{ secrets.AUTH0_CLIENT_ID }} 
        TF_VAR_auth0_client_secret: ${{ secrets.AUTH0_CLIENT_SECRET }}
      run: |
        cd terraform
        terraform apply -auto-approve -input=false

    # Upload the state file as an artifact for future use
    - name: Upload Terraform State
      uses: actions/upload-artifact@v3
      with:
        name: terraform-state
        path: terraform/terraform.tfstate
